# OPTIMIZED DEV-SUITE FOR AVC PARSER
# Ultra-fast tools with 197x performance improvement

# === TIER 1: WINNING TOOLS (ULTRA-FAST) ===
ruff                    # All-in-one: formatting + linting + import sorting (replaces black + isort + pyflakes)
pydeps                  # Import dependency analysis - fast, reliable
vulture==2.14           # Dead code detection - fast, high value
safety==3.6.2           # Security scanning - dependency focus

# === TIER 2: SPECIALIZED ANALYSIS ===
code2flow==2.5.1        # Function visualization - working well
bandit                  # Security code analysis (complements safety)

# === TIER 3: SPECIFIC USE CASES ===
refurb==2.2.0          # Python modernization - when needed
# mypy - Use manually for type checking (can be slow)

# === PERFORMANCE OPTIMIZATIONS ===
# radon - Fix pipe issues before re-enabling
# Skip: pytest (too slow for 4870-line file)
# Skip: flake8 (replaced by pyflakes + bandit)
# Skip: pylint (too slow)
# Skip: ast-grep-py, bowler, libcst (over-engineered for our use case)

# === MODULARIZATION SPECIFIC ===
# Manual approach preferred over automated tools for 4870-line refactoring
# Git branching strategy for safety
# Systematic function extraction with isort for import management